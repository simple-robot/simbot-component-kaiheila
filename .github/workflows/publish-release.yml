name: Publish Release
on:
  push:
    tags:
      - 'v4**'

concurrency:
  cancel-in-progress: true
  group: publish-release-${{ github.ref_name }}

env:
  JAVA_VERSION: 21
  JAVA_DISTRIBUTION: zulu
  GRADLE_VERSION: 8.5
  IS_CI: true
  GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
  GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
  GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  GRADLE_OPTS: "-Xmx8g -Xms2g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"

jobs:
  run-test:
    name: Run all tests for publish
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      # setup Gradle
      - name: Gradle Run Test
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Run all tests
        run: gradle assemble allTests --stacktrace --warning-mode all


  publish-releases:
    name: Publish releases
    needs: run-test
    # 交叉编译 support
    # see https://kotlinlang.org/docs/multiplatform-publish-lib.html#host-requirements
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      - name: Publish releases
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          arguments: |
            publishToSonatype
            closeAndReleaseStagingRepositories
            --info 
            --warning-mode all
            -x test
            --build-cache
            -Porg.gradle.jvmargs="-Xmx8g -Xms2g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"

        env:
          SIMBOT_IS_SNAPSHOT: false
          SIMBOT_RELEASES_ONLY: true

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: publish-releases
    permissions:
      contents: write
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v4

        # Create gitHub release
      - name: Create Github Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.PUSH_TOKEN }}
          body_path: .changelog/${{ github.ref_name }}.md
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'preview') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'dev') }}

  deploy-doc:
    name: Deploy-doc
    runs-on: ubuntu-latest
    needs: publish-releases
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      # setup Java
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      # setup Gradle
      - name: Gradle generate documentation
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.5
          arguments: |
            -Porg.gradle.jvmargs="-Xmx4g -Xms4g -XX:MaxMetaspaceSize=2g -Dfile.encoding=UTF-8" 
            -Porg.gradle.daemon=false
            --info 
            --warning-mode all
            -x test
            --build-cache
            dokkaHtmlMultiModule

      - name: Push to doc repository
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PUSH_TOKEN }}
          external_repository: simple-robot-library/simbot3-api-docs
          publish_branch: kdoc-deploy/component-kook
          publish_dir: ./build/dokka/html
          # deploy to sub dir
          destination_dir: components/kook

#  deploy-website:
#    name: Deploy Website
#    runs-on: ubuntu-latest
#    needs: run-test-and-publish
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#          cache: npm
#          cache-dependency-path: ./website/package-lock.json
#
#      - run: |
#          npm ci
#          npm run build
#        working-directory: ./website
#
#      # https://github.com/marketplace/actions/github-pages-action
#      - name: Push to doc repository
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          personal_token: ${{ secrets.PUSH_TOKEN }}
#          publish_branch: gh-pages
#          publish_dir: ./website/build
